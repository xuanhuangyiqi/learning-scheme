(define (even? n) (= (remainder n 2) 0))
(define (comb a b c d) 
  (+ (* a c) (* b d)))

(define (f a b c d n)
  (cond ((= n 0) c)
        ((even? n) (f (comb a b a c)
                      (comb a b b d)
                      (comb c d a c)
                      (comb c d b d)
                      (/ n 2)
                    ))
        (else (f (+ c (comb a b a c))
                 (+ d (comb a b b d))
                 (+ (comb c d a c) (+ a c))
                 (+ (comb c d b d) (+ b d))
                 (- n 1)))))
(f 0 1 1 1 1)
(f 0 1 1 1 2)
(f 0 1 1 1 3)
(f 0 1 1 1 4)
(f 0 1 1 1 5)
(f 0 1 1 1 6)
(f 0 1 1 1 7)
(f 0 1 1 1 8)
(f 0 1 1 1 9)
(f 0 1 1 1 10)
